@startuml

class MultiplatformReader {
  -nfcReader: LocalNfcReader
  -mutex: Mutex
  +setScanMessage(msg: String)
  +waitForCardPresent(): Boolean
  +startCardDetection(onCardFound: () -> Unit)
  +openPhysicalChannel()
  +closePhysicalChannel()
  +getPowerOnData(): String
  +transmitApdu(commandApdu: ByteArray): ByteArray
  +release()
}

abstract class LocalNfcReader {
  +scanMessage: String
  +waitForCardPresent(): Boolean
  +startCardDetection(onCardFound: () -> Unit)
  +openPhysicalChannel()
  +closePhysicalChannel()
  +getPowerOnData(): String
  +transmitApdu(commandApdu: ByteArray): ByteArray
  +releaseReader()
}

class AndroidNfcReader {
  -tag: Tag
  -isoDep: IsoDep
  -channel: Channel<Tag>
  -activity: Activity
}

class iOSNfcReader {
  -getErrorMsg: (e: Exception) -> String
  -readerCallback: NativeNfcReaderCallback
}

class NfcTag {
  -tag: NFCISO7816TagProtocol
  +sendCommand(isoApdu: NFCISO7816APDU): ByteArray
}

class NativeNfcReaderCallback {
  +tagReaderSessionDidBecomeActive(session: NFCTagReaderSession)
  +tagReaderSession(session: NFCTagReaderSession, didDetectTags: List)
  +tagReaderSession(session: NFCTagReaderSession, didInvalidateWithError: NSError)
}

class ReaderIOException {
  +message: String
}

class CardIOException {
  +message: String
}

class UnexpectedStatusWordException {
  +message: String
}

MultiplatformReader --> LocalNfcReader
AndroidNfcReader --|> LocalNfcReader
iOSNfcReader --|> LocalNfcReader
iOSNfcReader --> NativeNfcReaderCallback
iOSNfcReader --> NfcTag

LocalNfcReader ..> ReaderIOException : throws
LocalNfcReader ..> CardIOException : throws
LocalNfcReader ..> UnexpectedStatusWordException : throws

note bottom of AndroidNfcReader
  Uses Android NFC APIs:
  - IsoDep
  - NfcAdapter
  - Tag
end note

note bottom of iOSNfcReader
  Uses iOS CoreNFC:
  - NFCTagReaderSession
  - NFCISO7816TagProtocol
end note

@enduml